gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
# Compute k-means with k = 4
set.seed(123)
km.res <- kmeans(babywideF, 4, nstart = 25)
# Compute k-means with k = 4
set.seed(123)
km.res <- kmeans(babywideF, 4, nstart = 2)
# Print the results
print(km.res)
viz_cluster(k2, data = babywideF)
k2 <- kmeans(housing_price_numeric_50, centers = 2, nstart = 2)
k2 <- kmeans(housing_price_numeric_50, centers = 2, nstart = 2)
str(k2)
k2 <- kmeans(housing_price_numeric_50, centers = 3, nstart = 2)
str(k2)
fviz_cluster(k2, data = housing_price_numeric_50)
k3 <- kmeans(housing_price_numeric_50, centers = 3, nstart = 5)
k4 <- kmeans(housing_price_numeric_50, centers = 4, nstart = 5)
k5 <- kmeans(housing_price_numeric_50, centers = 5, nstart = 5)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = housing_price_numeric_50) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = housing_price_numeric_50) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = housing_price_numeric_50) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = housing_price_numeric_50) + ggtitle("k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
k2 <- kmeans(housing_price_numeric_50, centers = 2, nstart = 2)
str(k2)
fviz_cluster(k2, data = housing_price_numeric_50)
k3 <- kmeans(housing_price_numeric_50, centers = 3, nstart = 5)
k4 <- kmeans(housing_price_numeric_50, centers = 4, nstart = 5)
k5 <- kmeans(housing_price_numeric_50, centers = 5, nstart = 5)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = housing_price_numeric_50) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = housing_price_numeric_50) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = housing_price_numeric_50) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = housing_price_numeric_50) + ggtitle("k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
k3 <- kmeans(housing_price_numeric_50, centers = 3, nstart = 5)
k4 <- kmeans(housing_price_numeric_50, centers = 4, nstart = 5)
k5 <- kmeans(housing_price_numeric_50, centers = 5, nstart = 5)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = housing_price_numeric_50) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = housing_price_numeric_50) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = housing_price_numeric_50) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = housing_price_numeric_50) + ggtitle("k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
setwd("/Users/wangzehui/Desktop/QMSS ðŸ—½/QMSS 2021 Spring/QMSS Modern Data Structure/QMSS MDS HW4")
housing_price <- read.csv("Housing_prices_data.csv", stringsAsFactors=TRUE)
# head(housing_price)
names(housing_price)
library(Purrr)
install.packages("Purrr")
library(Purrr)
library(Purrr)
install.packages("Purrr")
library(Purrr)
install.packages("purrr")
library(purrr)
housing_price <- as_tibble(housing_price)
housing_price
knitr::opts_chunk$set(echo = TRUE)
library(purrr)
housing_price <- as_tibble(housing_price)
library(tidyverse)
setwd("/Users/wangzehui/Desktop/QMSS ðŸ—½/QMSS 2021 Spring/QMSS Modern Data Structure/QMSS MDS HW4")
housing_price <- read.csv("Housing_prices_data.csv", stringsAsFactors=TRUE)
# head(housing_price)
names(housing_price)
library(purrr)
housing_price <- as_tibble(housing_price)
housing_price
housing_price_factors <- keep(housing_price, is.factor)
housing_price_factors
price_foundation_list <- split(housing_price_sale_price, housing_price$Foundation)
housing_price_sale_price <- as_tibble(housing_price$SalePrice)
housing_price_sale_price
housing_price_sale_price <- housing_price %>%
select(SalePrice)
housing_price_sale_price
housing_price_sale_price <- as_tibble(housing_price$SalePrice)
housing_price_sale_price
price_foundation_list <- split(housing_price_sale_price, housing_price$Foundation)
price_foundation_list
map_dbl(price_foundation_list,colMeans)
map_dbl(price_foundation_list,col_mean_1)
#col_mean_1(housing_price_numeric)
head(col_mean_1(housing_price_numeric), n=10)
col_mean_1 <- function(df){
apply(df, 2, mean,na.rm=TRUE)
}
#col_mean_1(housing_price_numeric)
head(col_mean_1(housing_price_numeric), n=10)
housing_price_numeric <- keep(housing_price, is.numeric)
housing_price_numeric
housing_price_logical <- keep(housing_price, is.logical)
housing_price_logical
#col_mean_1(housing_price_numeric)
head(col_mean_1(housing_price_numeric), n=10)
col_mean_2 <- function(df){
lapply(df,mean,na.rm=TRUE)
}
#col_mean_2(housing_price_numeric)
head(col_mean_2(housing_price_numeric), n=10)
map_dbl(price_foundation_list,col_mean_1)
map_dbl(price_foundation_list,col_mean_1)
map_dbl(price_foundation_list,colMeans)
# I overwrite this just because they are exactly the same dataframe
housing_price_tibble <- as_tibble(housing_price)
housing_price_list <- as.list(housing_price_tibble)
# I give up on printing the list because it is super long
# head(housing_price_list,n=10)
salePrice_list <- pluck(housing_price_list, "SalePrice")
head(salePrice_list, n=10)
bldgType_list <-pluck(housing_price_list, "BldgType")
head(bldgType_list, n=10)
tail(bldgType_list, n=10)
append_list <- append(housing_price_list,bldgType_list)
head(append_list, n=10)
tail(append_list, n=10)
append_list <- append(salePrice_list,bldgType_list)
head(append_list, n=10)
tail(append_list, n=10)
append_list <- append(salePrice_list,bldgType_list)
head(append_list, n=10)
tail(append_list, n=10)
salePrice_list <- pluck(housing_price_list, "SalePrice")
head(salePrice_list, n=10)
# I overwrite this just because they are exactly the same dataframe
housing_price_tibble <- as_tibble(housing_price)
housing_price_list <- as.list(housing_price_tibble)
# I give up on printing the list because it is super long
# head(housing_price_list,n=10)
salePrice_list <- pluck(housing_price_list, "SalePrice")
head(salePrice_list, n=10)
bldgType_list <-pluck(housing_price_list, "BldgType")
head(bldgType_list, n=10)
tail(bldgType_list, n=10)
append_list <- append(salePrice_list,bldgType_list)
head(append_list, n=10)
tail(append_list, n=10)
append_list <- append(salePrice_list,bldgType_list)
head(append_list, n=10)
append_list <- append(salePrice_list,bldgType_list)
head(append_list, n=10)
tail(append_list, n=10)
salePrice_list <- pluck(housing_price_list, "SalePrice")
head(salePrice_list, n=10)
tail(salePrice_list, n=10)
append_list <- append(salePrice_list, bldgType_list)
head(append_list, n=10)
tail(append_list, n=10)
append_list <- append(salePrice_list, bldgType_list)
head(append_list, n=10)
tail(append_list, n=200)
append_list <- append(salePrice_list, bldgType_list)
head(append_list, n=10)
tail(append_list, n=10)
salePrice_list <- pluck(housing_price_list, "SalePrice")
head(salePrice_list, n=10)
tail(salePrice_list, n=10)
str(list_saleprice)
salePrice_list <- pluck(housing_price_list, "SalePrice")
head(salePrice_list, n=10)
tail(salePrice_list, n=10)
str(salePrice_list)
bldgType_list <-pluck(housing_price_list, "BldgType")
head(bldgType_list, n=10)
tail(bldgType_list, n=10)
str(bldgType_list)
append_list <- append(salePrice_list, bldgType_list)
head(append_list, n=10)
tail(append_list, n=10)
str(append_list)
append_list <- append(bldgType_list,salePrice_list)
head(append_list, n=10)
tail(append_list, n=10)
str(append_list)
price_foundation_list <- split(housing_price_sale_price, housing_price$Foundation)
price_foundation_list
str(price_foundation_list)
map_dbl(price_foundation_list,colMeans)
map_dbl(price_foundation_list,colMeans,na.rm=FALSE)
salePrice_list <- pluck(housing_price_list, "SalePrice")
head(salePrice_list, n=10)
str(salePrice_list)
bldgType_list <-pluck(housing_price_list, "BldgType")
head(bldgType_list, n=10)
tail(bldgType_list, n=10)
str(bldgType_list)
append_list <- append(salePrice_list, bldgType_list)
head(append_list, n=10)
tail(append_list, n=10)
str(append_list)
housing_price_sale_price <- as_tibble(housing_price_numeric$SalePrice)
housing_price_sale_price
library(purrr)
housing_price_factors <- keep(housing_price, is.factor)
housing_price_factors
col_mean_1 <- function(df){
apply(df, 2, mean,na.rm=TRUE)
}
#col_mean_1(housing_price_numeric)
head(col_mean_1(housing_price_numeric), n=10)
col_mean_3 <- function(df){
sapply(df,mean,na.rm=TRUE)
}
#col_mean_3(housing_price_numeric)
head(col_mean_3(housing_price_numeric), n=10)
housing_price_sale_price <- housing_price_numeric %>%
select(SalePrice)
housing_price_sale_price
price_foundation_list <- split(housing_price_sale_price, housing_price$Foundation)
price_foundation_list
str(price_foundation_list)
col_mean_foundation <- map_dbl(price_foundation_list,colMeans,na.rm=FALSE)
col_mean_foundatio
col_mean_foundation <- map_dbl(price_foundation_list,colMeans,na.rm=FALSE)
col_mean_foundation
# I overwrite this just because they are exactly the same dataframe
housing_price_tibble <- as_tibble(housing_price)
housing_price_list <- as.list(housing_price_tibble)
# I give up on printing the list because it is super long
# head(housing_price_list,n=10)
# I overwrite this just because they are exactly the same dataframe
housing_price_tibble <- as_tibble(housing_price)
housing_price_list <- as.list(housing_price_tibble)
# I give up on printing the list because it is super long
# head(housing_price_list,n=10)
salePrice_list <- pluck(housing_price_list, "SalePrice")
head(salePrice_list, n=10)
str(salePrice_list)
bldgType_list <-pluck(housing_price_list, "BldgType")
head(bldgType_list, n=10)
tail(bldgType_list, n=10)
str(bldgType_list)
append_list <- append(salePrice_list, bldgType_list)
head(append_list, n=10)
tail(append_list, n=10)
str(append_list)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
setwd("/Users/wangzehui/Desktop/QMSS ðŸ—½/QMSS 2021 Spring/QMSS Modern Data Structure/QMSS MDS HW4")
housing_price_original <- read.csv("Housing_prices_data.csv", stringsAsFactors=TRUE)
# head(housing_price)
names(housing_price)
names(housing_price_original)
housing_price <- as_tibble(housing_price_original)
housing_price_original
# I overwrite this just because they are exactly the same dataframe
housing_price_tibble <- as_tibble(housing_price_original)
housing_price_list <- as.list(housing_price_tibble)
# I give up on printing the list because it is super long
# head(housing_price_list,n=10)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
setwd("/Users/wangzehui/Desktop/QMSS ðŸ—½/QMSS 2021 Spring/QMSS Modern Data Structure/QMSS MDS HW4")
housing_price_original <- read.csv("Housing_prices_data.csv", stringsAsFactors=TRUE)
# head(housing_price)
names(housing_price_original)
housing_price <- as_tibble(housing_price_original)
housing_price_original
library(purrr)
housing_price_factors <- keep(housing_price, is.factor)
housing_price_factors
housing_price_numeric <- keep(housing_price, is.numeric)
housing_price_numeric
housing_price_logical <- keep(housing_price, is.logical)
housing_price_logical
col_mean_1 <- function(df){
apply(df, 2, mean,na.rm=TRUE)
}
#col_mean_1(housing_price_numeric)
head(col_mean_1(housing_price_numeric), n=10)
col_mean_2 <- function(df){
lapply(df,mean,na.rm=TRUE)
}
#col_mean_2(housing_price_numeric)
head(col_mean_2(housing_price_numeric), n=10)
col_mean_3 <- function(df){
sapply(df,mean,na.rm=TRUE)
}
#col_mean_3(housing_price_numeric)
head(col_mean_3(housing_price_numeric), n=10)
housing_price_sale_price <- housing_price_numeric %>%
select(SalePrice)
housing_price_sale_price
price_foundation_list <- split(housing_price_sale_price, housing_price$Foundation)
price_foundation_list
str(price_foundation_list)
col_mean_foundation <- map_dbl(price_foundation_list,colMeans,na.rm=FALSE)
col_mean_foundation
# I overwrite this just because they are exactly the same dataframe
housing_price_tibble <- as_tibble(housing_price_original)
housing_price_list <- as.list(housing_price_tibble)
# I give up on printing the list because it is super long
# head(housing_price_list,n=10)
salePrice_list <- pluck(housing_price_list, "SalePrice")
head(salePrice_list, n=10)
str(salePrice_list)
bldgType_list <-pluck(housing_price_list, "BldgType")
head(bldgType_list, n=10)
tail(bldgType_list, n=10)
str(bldgType_list)
append_list <- append(salePrice_list, bldgType_list)
head(append_list, n=10)
tail(append_list, n=10)
str(append_list)
library(devtools)
#install.packages("roxygen2")
library(roxygen2)
#install.packages("devtools")
library(devtools)
knitr::opts_chunk$set(echo = TRUE)
install.pacakegs("ggmap")
install.pacakegs("ggmap")
knitr::opts_chunk$set(echo = TRUE)
install.pacakegs("ggmap")
library(WDI)
library(dplyr)
install.pacakegs("ggmap")
install.packages("ggmap")
install.packages("ggplot2")
library(ggmap)
library(ggplot2)
library(ggmap)
library(ggplot2)
library(ggmap)
library(maps)
library(ggplot2)
library(ggmap)
install.packages("maps")
library(ggplot2)
library(ggmap)
install.packages("map_data")
library(ggplot2)
library(ggmap)
library(maps)
# See the `â€˜mapprojâ€™` package for a list of projections
us.states <- map_data("state")
ggplot() + geom_polygon( data = us.states,
aes(x = long, y = lat, group=group),
color = "grey", fill = NA) +
coord_map(projection = "azequidistant")
library(ggplot2)
library(ggmap)
library(maps)
library(mapproj)
library(ggplot2)
library(ggmap)
library(maps)
install.packages("mapproj")
library(ggplot2)
library(ggmap)
library(maps)
library(mapproj)
# See the `â€˜mapprojâ€™` package for a list of projections
us.states <- map_data("state")
ggplot() + geom_polygon( data = us.states,
aes(x = long, y = lat, group=group),
color = "grey", fill = NA) +
coord_map(projection = "azequidistant")
# See the `â€˜mapprojâ€™` package for a list of projections
world_map <- map_data("world")
ggplot() + geom_polygon( data = world_map,
aes(x = long, y = lat, group=group),
color = "grey", fill = NA) +
coord_map(projection = "azequidistant")
# See the `â€˜mapprojâ€™` package for a list of projections
world_map <- map_data("world")
ggplot() + geom_polygon( data = world_map,
aes(x = long, y = lat, group=group),
color = "grey", fill = NA)
#coord_map(projection = "azequidistant")
library(ggplot2)
library(ggmap)
library(maps)
library(mapproj)
library(dplyr)
library(tidyverse)
library(ggmap)
# This is Walmart's HQ address:
geocode("702 S.W. Eighth St. Bentonville Arkansas 72716", output = "latlon" , source = "google")
library(readr)
fortune500 <- read_csv("fortune500.csv")
library(XML)
library(RCurl)
# See the `â€˜mapprojâ€™` package for a list of projections
world_map <- map_data("world")
ggplot() + geom_polygon( data = df,
aes(x = long, y = lat, group=group),
color = "grey", fill = NA)
# See the `â€˜mapprojâ€™` package for a list of projections
world_map <- map_data("world")
ggplot() + geom_polygon( data = world_map,
aes(x = long, y = lat, group=group),
color = "grey", fill = NA)
measles.merged = left_join(df, world_map, by='country')
library(ggplot2)
library(ggmap)
library(maps)
library(mapproj)
library(dplyr)
library(tidyverse)
measles.merged = left_join(df, world_map, by='country')
WDIsearch('measles')
df = WDI(indicator = "SH.IMM.MEAS" ,
start = 2020, end = 2020, extra = F)
df <- df %>% filter(!is.na(SH.IMM.MEAS))
measles.merged = left_join(df, world_map, by='country')
rlang::last_error()
rlang::last_trace()
measles.merged = left_join(df, world_map, by='region')
knitr::opts_chunk$set(echo = TRUE)
measles.merged <-merge(states, measles, by = "region", all.x=T)
measles.merged <-merge(world_map, df, by = "region", all.x=T)
# See the `â€˜mapprojâ€™` package for a list of projections
world_map <- map_data("world")
library(ggplot2)
library(ggmap)
library(maps)
library(mapproj)
library(dplyr)
library(tidyverse)
# See the `â€˜mapprojâ€™` package for a list of projections
world_map <- map_data("world")
ggplot() + geom_polygon( data = world_map,
aes(x = long, y = lat, group=group),
color = "grey", fill = NA)
measles.merged <-merge(world_map, df, by = "region", all.x=T)
measles.merged <- left_join(world_map, df, by = "region", all.x=T)
measles.merged <- left_join(world_map, df, by = "region", all.x=T,copy = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/wangzehui/RPacakge")
install.packages("NBAstats")
library(usethis)
library(devtools)
library(roxygen2)
library(NBAstats)
?PTS_top10_NBAplayers_of_year
?cor_matrix_of_year
?oldest_NBAplayer_of_year
setwd("/Users/wangzehui/Desktop/QMSS MDS HW5")
PTS_top10_NBAplayers_of_year(1999)
library(NBAstats)
?PTS_top10_NBAplayers_of_year
?cor_matrix_of_year
?oldest_NBAplayer_of_year
#setwd("/Users/wangzehui/Desktop/QMSS MDS HW5")
PTS_top10_NBAplayers_of_year(1999)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/wangzehui/RPacakge")
devtools::install("NBA")
library(NBA)
# setwd("/Users/wangzehui/RPacakge/NBA")
?cor_matrix_of_year
?nba
?oldest_NBAplayer_of_year
cor_matrix_of_year(1999)
oldest_NBAplayer_of_year(1999)
# setwd("/Users/wangzehui/RPacakge/NBA")
?cor_matrix_of_year
library(usethis)
library(devtools)
#install.packages("roxygen2")
library(roxygen2)
setwd("/Users/wangzehui/RPacakge/NBA") #Assumes you are currently using R working directory.
document() #devtools function that creates .Rd files used in help(function_name)
setwd("/Users/wangzehui/RPacakge")
devtools::install("NBA")
library(NBA)
?PTS_top10_NBAplayers_of_year
PTS_top10_NBAplayers_of_year(1999)
cor_matrix_of_year(1999)
PTS_top10_NBAplayers_of_year(1999)
oldest_NBAplayer_of_year(1999)
# setwd("/Users/wangzehui/RPacakge/NBA")
?cor_matrix_of_year
setwd("/Users/wangzehui/RPacakge/NBA")
PTS_top10_NBAplayers_of_year(1999)
cor_matrix_of_year(1999)
#do not do the following in your .R scripts with your package functions:
library(dplyr)
PTS_top10_NBAplayers_of_year(1999)
oldest_NBAplayer_of_year(1999)
setwd("/Users/wangzehui/RPacakge")
devtools::install("NBA")
library(NBA)
# setwd("/Users/wangzehui/RPacakge/NBA")
?cor_matrix_of_year
?nba
cor_matrix_of_year(1999)
PTS_top10_NBAplayers_of_year(1999)
oldest_NBAplayer_of_year(1999)
setwd("/Users/wangzehui/RPacakge")
devtools::install("NBA")
library(NBA)
?oldest_NBAplayer_of_year
cor_matrix_of_year(1999)
PTS_top10_NBAplayers_of_year(1999)
setwd("/Users/wangzehui/RPacakge")
devtools::install("NBA")
library(NBA)
?nba
cor_matrix_of_year(1999)
PTS_top10_NBAplayers_of_year(1999)
